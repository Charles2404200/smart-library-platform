DROP TABLE IF EXISTS StaffLog;
DROP TABLE IF EXISTS Review;
DROP TABLE IF EXISTS Checkout;
DROP TABLE IF EXISTS BookAuthor;
DROP TABLE IF EXISTS Book;
DROP TABLE IF EXISTS Author;
DROP TABLE IF EXISTS User;

CREATE TABLE User (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(100) UNIQUE,
  password VARCHAR(255),
  role ENUM('reader', 'staff') NOT NULL DEFAULT 'reader'
);

CREATE TABLE Author (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL
);

CREATE TABLE Book (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255),
  genre VARCHAR(100),
  publisher VARCHAR(255),
  copies INT DEFAULT 1
);

CREATE TABLE BookAuthor (
  bookId INT,
  authorId INT,
  PRIMARY KEY (bookId, authorId),
  FOREIGN KEY (bookId) REFERENCES Book(id) ON DELETE CASCADE,
  FOREIGN KEY (authorId) REFERENCES Author(id) ON DELETE CASCADE
);

CREATE TABLE Checkout (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT,
  bookId INT,
  checkoutAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  returnAt DATETIME,
  isLate BOOLEAN,
  FOREIGN KEY (userId) REFERENCES User(id),
  FOREIGN KEY (bookId) REFERENCES Book(id)
);

CREATE TABLE Review (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT,
  bookId INT,
  rating INT CHECK (rating BETWEEN 1 AND 5),
  comment TEXT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES User(id),
  FOREIGN KEY (bookId) REFERENCES Book(id)
);

CREATE TABLE StaffLog (
  id INT AUTO_INCREMENT PRIMARY KEY,
  staffId INT,
  action VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (staffId) REFERENCES User(id)
);
